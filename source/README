This file contains instructions on how to build the latest version of uC++.


>> REQUIREMENTS <<

uC++ requires at least:

1. g++-4.0.3 or greater for Linux and g++-4.2.1 or greater for Solaris. uC++
   does not work with g++-4.3.0 on Solaris, due to a bug in the exception
   handling runtime.  uC++ does NOT compile using other compilers or operating
   systems.

2. gmake-3.79.1 or greater, which is available by anonymous ftp from any FSF
   mirror site. (All instructions below assume the "make" command is "gmake".)


>> AUTOMATIC uC++ BUILD <<

0. Obtain the shellball.

1. Optionally sudo to install in /usr/local and /usr/local/bin

2. Enter "sh u++-6.0.0.sh"

3. To uninstall uC++ enter "u++-uninstall"


>> MANUAL uC++ BUILD <<

0. Obtain the shellball.

1. Enter "sh u++-6.0.0.sh -e" to extract the tarball

2. Before you build uC++, read the comments and edit the variables in the top
   level make file, ./Makefile.

3. Type "make" to get a list of supported configurations or read the list in
   the top level make file.

4. Type "make xxx", where xxx is one of the listed configurations, e.g.,
   "make sun-sparc" to configure for a SUN Sparc running Solaris. A CONFIG
   file is created and all Makefiles are modified with appropriate path names.

5. Type "make install" to compile and install uC++. To compile and install
   separately, type "make" to compile uC++ and then "make install" to move the
   necessary executables and libraries to the install location.

6. After installation is complete, the executable "u++" is created in the
   directory defined by INSTALLBINDIR in the top level make file.  Add this
   directory to your command path to access the compilation command u++.  While
   the "u++" command can be moved to any location, do not move the "lib" or
   "inc" directories, as the "u++" command contains hard-coded references to
   them, which are set at installation time.

7. Type "make clean" to remove any temporary files created during
   installation.

8. Directory INSTALLPREFIX/src/examples has a number of example uC++ programs.
   Type "make bench" in this directory to do a basic test of the installation.


>> NOTES <<

The file CONFIG is generated by the Makefile.  It contains definitions that are
specific to an installation on this type of machine.  This file is included by
many of the Makefiles in directories below this one.  Do not modify the CONFIG
file directly, rather, remove the CONFIG, modify the file ./Makefile, and start
at step 3 for building uC++.


>> AUTHORS <<

P. A. Buhr
and many others
